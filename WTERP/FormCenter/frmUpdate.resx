<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCheckForUpdate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAV9JREFUOE+N
        kj1LBDEQhldtXc1kz9ZaEZtN9kBEtLMQQQv/hZ2FoJV29gr+Bb8KtfGrFEFMthBOKwVBEQv1Bxy6zoS5
        7N1xnHlhIPu8+04mm406Kc/EtNXi0GZwdluNE8b/q4iiHqthG6vAergfHwS2wmSUXOFwYVM5yzhM15OV
        GIPfLqzglaZhK0xGiQW/u5ZHjFtk02TUqGSEH1uFwXXfQMEOYy+j4gp6L1S0ZoxfXIsLhE8Y+iobyA/H
        NJzTO/tLUR9OdeV9LS6JuQZ3WswgrJemrzp59E6eyc12P1dywzUgISjHL2vNeVWxiOvfNo/qxyiYcw34
        /k+azOPGLeDRTm0mjcngufTlGzH09lwDUm1sqB9BjYrWjL0wuNtokCtYZdyqbteEwXLCDOYZhwmP04vB
        d7e7hs9OE3YVfSy/u4ZlxmG6mRiQGHrk8BbjMOHOw/QDGS0ObApTjJsURX/9SM45RqZ7eQAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAALNJREFUSEtj
        GAWDE5wzFsw4Z8gjCuUSBCC1ID1QLn5wxlQw66yJ4H8gvkSMJSA1ILUgPWeMBTOhwrjBeQMBgbMmAqfA
        GkwEbp4zFJGCSmEAkBxIDcRBAqdAeqFS+AExlpBtOAzgs4Riw2EAmyVUMxwGkCMRSsPZpKQ0vADNEuoa
        DgKowUI4dZEEaBpE2CIUX+oiCeBLLRRbgs9wGCDbEmIMhwGyLKF5YQcCNC2uRwGdAQMDAFoF1xP6WAxw
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDjPIBA4zyAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEjfRHBE0zdsRNM3WFTXKGAAA
        AAASNM2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEzzmgRNMzEETTMxBEz
        zmgAAAAAETTN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFjfIFxI0zmIRM8w8EjTNgBI0
        zYAAAAAAAAAAABE0zf8AAAAAETPOdxA1zWEMLtEWAAAAAAAAAAAAAAAAEzTLNhE0zecRNM2ZEzXORBI0
        zYASNM2AAAAAAAAAAAARNM3/AAAAABE1zIgRNM2ZETTN5xMzzDcAAAAAAAAAABE0zsQQNc1SAAAAAAAA
        AAASNM2AEjTNgBI30RwRM853ETTN/xEzzncTOdAbAAAAABI0zlQRNM3GAAAAAAAAAAARNM30GjPMCgAA
        AAAAAAAAEDTLQBA0y0AAAAAAEDXOjBE0zf8QNc6MAAAAAAAAAAAUO8QNETTN8gAAAAAAAAAAEDTOyRA0
        z08AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQNMtAAAAAAAAAAAAAAAAAEjTOVBE0zcYAAAAAAAAAABEz
        zDwRNM3sETTOWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARNMtKETTNmRI1zekSMs04AAAAAAAA
        AAAAAAAAEjPMZBE0zrUNNskTAAD/AgAAAAAAAAAAAAAAAAAAAAAAM8wFETTN5hI1zHQRM8weAAAAAAAA
        AAAAAAAAAAAAACBAvwgSNM2tETTN9RA0zJwAK9UGAAAAAAAAAAAAM8wFEDTNnRE0zbEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABEzzA8RNc24ETTN3BA1zowRNc6WETTN3BE0zbIVK9UMAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABM0yzYQNcxvETPOaBA1zzAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA+b8AAPm/AAD5vwAAyaMAALm9AAC/HQAAv/0AAN/z
        AADv7wAA488AAPgfAAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAASNM2AEjTNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEjTNgBE0zf8RNM3/EjTNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABI0zYARNM3/ETTN/xE0zf8RNM3/EjTNgAAAAAAAAAAAAAAAABE0
        zf8RNM3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARNcyIETTN/xE0zf8RNM3/ETTN/xE0zf8RNM3/ETXMiAAA
        AAAAAAAAETTN/xE0zf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABE0zf8RNM3/AAAAAAAA
        AAAAAAAAAAAAAAAAAAARNM3/ETTN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAETTN/xE0
        zf8AAAAAAAAAAAAAAAAAAAAAAAAAABE0zf8RNM3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr1QYRM85oEjXNzBE0zfgRNM3/AAAAAAAA
        AAARNM3/ETTN/wAAAAAAAAAAAAAAAAAAAAAAAAAAETTN/xE0zf8AAAAAAAAAABE0zf8RNM3/ETTN+BA0
        zcoRNM1nADPMBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATOdAbETTNzhE0zf8RNM3/ETTN/xE0
        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
        zA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASN8gOETXOqhE0zf8RNM3vDzbRIQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzbONBE0
        zfERNM3/ETTM4xE0zXoSNdArDTPMFA8t0hERNMssETTNdRE0zOMRNM3/ETTN8hA1zj8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADzXLIhA0zroRNM3/ETTN/xE0zf8RNM3/ETTN/xE0zf8RNM3/ETTN/xE0zcYTMs0pAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABE0yzsQNM2dETTN0xI1zekRNc3uETTN4hE0zaISNMtFAAD/AQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////n////w////4HP//8Az///58///+fP//xn
        zD/wZ8wP4+fPx+fnz+fP5gHzz+cD88//h/PP///z5///5+P//8fx//4P+f/8P/j//P/8H/j//g/x///H
        4///4Af///gf////////////////////////////
</value>
  </data>
</root>